{
	"cpp": {
  "prefix": "cpp",
  "body": [
    "#include <bits/stdc++.h>",
    "using namespace std;",
    "using ll = long long;",
    "using ull = unsigned long long;",
    "#define endl            '\\n'",
    "#define ff              first",
    "#define ss              second",
    "#define pi              acos(-1)",
    "#define mod             1000000007 ",
    "#define newline         cout << '\\n'",
    "#define no              cout << \"NO\\n\"",
    "#define yes             cout << \"YES\\n\"",
    "#define all(A)          A.begin(), A.end()",
    "#define rall(x)         x.rbegin(), x.rend()",
    "#define setPre(n)       fixed << setprecision(n)",
    "#define cases(tc)       cout << \"Case #\" << tc << \": \"",
    "#define debug(args...)  cout << #args << \" = \" << args << endl;",
    "#define getunique(v){sort(v.begin(), v.end());v.erase(unique(v.begin(), v.end()), v.end());}",
    "template<typename T>istream &operator>>(istream &istream,vector<T>&v){for(auto &it:v)cin>>it;return istream;}",
    "template<typename T>ostream &operator<<(ostream &ostream,const vector<T>&c){for(auto &it:c)cout<<it<<' ';return ostream;}",
    "",
    "/* Great things come from hard work and perseverance",
    "",
    "    Hey you should check this out",
    "    * int overflow, array bounds",
    "    * reset global array and variable",
    "    * look for special cases (n=1?)",
    "    * do something instead of nothing and stay organized",
    "    * bruteforce to find pattern",
    "    * DON'T GET STUCK ON ONE APPROACH",
    "    * Think the problem backwards",
    "    * In practice time don't see failing test case",
    "*/",

    "",
    "void solve() {",
    "    ll n;",
    "    cin >> n;",
    "    vector<ll> v(n);",
    "    cin >> v;",
    "    ",
    "}",
    "",
    "int32_t main()",
    "{",
    "    //freopen(\"input.txt\",\"r\",stdin);",
    "    //freopen(\"output.txt\",\"w\",stdout);",
    "    ios_base ::sync_with_stdio(false);",
    "    cin.tie(NULL);",
    "    int t = 1;",
    "    cin >> t;",
    "    while (t--)",
    "    {",
    "        // cases(tc);",
    "        solve();",
    "    }",
    "    return 0;",
    "}",
    ""
  ],
  "description": "cpp"
}
}
